/*
 * Copyright (C) 2014 - 2016 Niall 'Rivernile' Scott
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors or contributors be held liable for
 * any damages arising from the use of this software.
 *
 * The aforementioned copyright holder(s) hereby grant you a
 * non-transferrable right to use this software for any purpose (including
 * commercial applications), and to modify it and redistribute it, subject to
 * the following conditions:
 *
 *  1. This notice may not be removed or altered from any file it appears in.
 *
 *  2. Any modifications made to this software, except those defined in
 *     clause 3 of this agreement, must be released under this license, and
 *     the source code of any modifications must be made available on a
 *     publically accessible (and locateable) website, or sent to the
 *     original author of this software.
 *
 *  3. Software modifications that do not alter the functionality of the
 *     software but are simply adaptations to a specific environment are
 *     exempt from clause 2.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "uk.org.rivernile.edinburghbustracker.android"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 15
        versionName "3.0 development"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Populate the build config with API keys which are stored in local.properties so that
        // ApiKey.java can pick them up.
        final Properties properties = new Properties()

        try {
            properties.load(new FileInputStream("local.properties"))
        } catch (IOException ignored) {
            // Do nothing. This is probably happening on the CI server.
        }

        buildConfigField("String", "API_KEY",
                "\"" + properties.getProperty("apiKey", "invalid") + "\"")
        buildConfigField("String", "BUGSENSE_KEY",
                "\"" + properties.getProperty("bugsenseKey", "invalid") + "\"")
        buildConfigField("boolean", "BUGSENSE_ENABLED", "false")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "BUGSENSE_ENABLED", "true")
        }
        debug {
            testCoverageEnabled true
        }
    }
    lintOptions {
        // TODO: fix lint errors and remove this.
        abortOnError false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support:recyclerview-v7:25.1.0'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:percent:25.1.0'
    compile 'com.google.android.gms:play-services-maps:10.0.1'
    compile 'uk.org.rivernile.android.fetchutils:fetchutils-library:1.1.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:okhttp:3.5.0'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    androidTestCompile 'com.android.support:support-annotations:25.1.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'

    testCompile 'junit:junit:4.12'
}