/*
 * Copyright (C) 2014 - 2020 Niall 'Rivernile' Scott
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors or contributors be held liable for
 * any damages arising from the use of this software.
 *
 * The aforementioned copyright holder(s) hereby grant you a
 * non-transferrable right to use this software for any purpose (including
 * commercial applications), and to modify it and redistribute it, subject to
 * the following conditions:
 *
 *  1. This notice may not be removed or altered from any file it appears in.
 *
 *  2. Any modifications made to this software, except those defined in
 *     clause 3 of this agreement, must be released under this license, and
 *     the source code of any modifications must be made available on a
 *     publically accessible (and locateable) website, or sent to the
 *     original author of this software.
 *
 *  3. Software modifications that do not alter the functionality of the
 *     software but are simply adaptations to a specific environment are
 *     exempt from clause 2.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

ext {
    architectureComponentsVersion = '2.2.0'
    googlePlayServicesVersion = '17.0.0'

    espressoVersion = '3.0.2'
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Populate the build config with API keys which are stored in local.properties so that
        // ApiKey.java can pick them up.
        final Properties properties = new Properties()

        try {
            properties.load(new FileInputStream("local.properties"))
        } catch (IOException ignored) {
            // Do nothing. This is probably happening on the CI server.
        }

        buildConfigField("String", "API_KEY",
                "\"" + properties.getProperty("apiKey", "invalid") + "\"")
        buildConfigField("String", "BUGSENSE_KEY",
                "\"" + properties.getProperty("bugsenseKey", "invalid") + "\"")
        buildConfigField("boolean", "BUGSENSE_ENABLED", "false")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "BUGSENSE_ENABLED", "true")
        }
        debug {
            testCoverageEnabled true
        }
    }

    flavorDimensions "city"

    productFlavors {
        edinburgh {
            dimension "city"

            applicationId "uk.org.rivernile.edinburghbustracker.android"
            versionCode 15
            versionName "3.0 development"
        }
    }

    lintOptions {
        // TODO: fix lint errors and remove this.
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    useLibrary 'android.test.mock'

    afterEvaluate {
        applicationVariants.all { variant ->
            variant.resValue 'string', 'package_name', variant.applicationId
            variant.resValue 'string', 'search_authority',
                    "${variant.applicationId}.SearchSuggestionsProvider"
        }
    }
}

allOpen {
    annotation 'uk.org.rivernile.android.bustracker.core.utils.OpenClass'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':androidcore')

    // Android support libraries
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'androidx.preference:preference:1.1.1'

    // Android Architecture Components
    implementation "androidx.lifecycle:lifecycle-extensions:$architectureComponentsVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$architectureComponentsVersion"

    // Google Play Services
    implementation "com.google.android.gms:play-services-maps:$googlePlayServicesVersion"
    implementation 'com.google.maps.android:android-maps-utils:0.5'

    // Dagger 2
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation 'uk.org.rivernile.android.fetchutils:fetchutils-library:1.1.1'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Test dependencies
    androidTestImplementation "androidx.test:core:$androidTestCoreVersion"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"

    testImplementation project(':testutils')
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
}