/*
 * Copyright (C) 2014 - 2018 Niall 'Rivernile' Scott
 *
 * This software is provided 'as-is', without any express or implied
 * warranty.  In no event will the authors or contributors be held liable for
 * any damages arising from the use of this software.
 *
 * The aforementioned copyright holder(s) hereby grant you a
 * non-transferrable right to use this software for any purpose (including
 * commercial applications), and to modify it and redistribute it, subject to
 * the following conditions:
 *
 *  1. This notice may not be removed or altered from any file it appears in.
 *
 *  2. Any modifications made to this software, except those defined in
 *     clause 3 of this agreement, must be released under this license, and
 *     the source code of any modifications must be made available on a
 *     publically accessible (and locateable) website, or sent to the
 *     original author of this software.
 *
 *  3. Software modifications that do not alter the functionality of the
 *     software but are simply adaptations to a specific environment are
 *     exempt from clause 2.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'

ext {
    supportLibraryVersion = '27.1.1'
    architectureComponentsVersion = '1.1.1'
    googlePlayServicesVersion = '15.0.1'
    daggerVersion = '2.15'

    testSupportLibraryVersion = '1.0.2'
    espressoVersion = '3.0.2'
}

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "uk.org.rivernile.edinburghbustracker.android"
        minSdkVersion 17
        targetSdkVersion 27
        versionCode 15
        versionName "3.0 development"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        // Populate the build config with API keys which are stored in local.properties so that
        // ApiKey.java can pick them up.
        final Properties properties = new Properties()

        try {
            properties.load(new FileInputStream("local.properties"))
        } catch (IOException ignored) {
            // Do nothing. This is probably happening on the CI server.
        }

        buildConfigField("String", "API_KEY",
                "\"" + properties.getProperty("apiKey", "invalid") + "\"")
        buildConfigField("String", "BUGSENSE_KEY",
                "\"" + properties.getProperty("bugsenseKey", "invalid") + "\"")
        buildConfigField("boolean", "BUGSENSE_ENABLED", "false")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("boolean", "BUGSENSE_ENABLED", "true")
        }
        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        // TODO: fix lint errors and remove this.
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
}

allOpen {
    annotation 'uk.org.rivernile.android.bustracker.utils.OpenClass'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // Android support libraries
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:percent:$supportLibraryVersion"

    // Android Architecture Components
    implementation "android.arch.lifecycle:extensions:$architectureComponentsVersion"
    kapt "android.arch.lifecycle:compiler:$architectureComponentsVersion"

    // Google Play Services
    implementation "com.google.android.gms:play-services-maps:$googlePlayServicesVersion"
    implementation 'com.google.maps.android:android-maps-utils:0.5'

    // Dagger 2
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    implementation 'uk.org.rivernile.android.fetchutils:fetchutils-library:1.1.1'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.5.2'

    // Okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.1.0'

    // Test dependencies
    androidTestImplementation "com.android.support:support-annotations:" + supportLibraryVersion
    androidTestImplementation "com.android.support.test:runner:" + testSupportLibraryVersion
    androidTestImplementation "com.android.support.test:rules:" + testSupportLibraryVersion
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.22.0'
    testImplementation 'com.nhaarman:mockito-kotlin:1.6.0'
    testImplementation "android.arch.core:core-testing:$architectureComponentsVersion"
}